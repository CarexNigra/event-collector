[tool.poetry]
name = "event-collector"
version = "0.1.0"
description = "Producer and consumer for handling events"
authors = ["Lara Simonova <lara@miro.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0.post1"}
httpx = "^0.25.1"
grpcio-tools = "^1.59.3"
webtest = "^3.0.0"
confluent-kafka = "^2.3.0"
types-protobuf = "^5.27.0.20240626"
minio = "^7.2.8"
gunicorn = "^23.0.0"
pydantic-settings = "^2.6.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.7.0"
pre-commit = "^3.5.0"
pytest = "^7.4.3"
pytest-minio-mock = "^0.4.16"
pytest-mock = "^3.14.0"
ruff = "^0.7.3"
types-confluent-kafka = "^1.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "events",
    "proto",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytype",
    ".svn",
    ".tox",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
]
line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"